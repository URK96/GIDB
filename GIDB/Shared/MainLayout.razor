@using Microsoft.AspNetCore.Components
@inherits LayoutComponentBase

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="mt-1">GIDB</MudText>
        <MudAppBarSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="isPanelOpen" ClipMode="DrawerClipMode.Docked" Elevation="2" Variant="DrawerVariant.Temporary">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Class="mt-1">GIDB</MudText>
        </MudDrawerHeader>
        <NavMenu OnLinkClicked=@OnNavLinkClick />
    </MudDrawer>
    <MudMainContent>
        <BFUStackItem Grow="1" Tokens="new BFUStackItemTokens { Padding = ((int)CurrentMode <= (int)ResponsiveMode.Medium ? 10 : 20) }" Style="overflow-y:auto;">
            @Body
        </BFUStackItem>
    </MudMainContent>
</MudLayout>

@code
{
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    [CascadingParameter] public ResponsiveMode CurrentMode { get; set; }

    private bool isMenuCollapsed = true;
    private bool isPanelOpen = false;

    void ShowMenu()
    {
        isPanelOpen = true;
    }

    void HideMenu()
    {
        isPanelOpen = false;
    }

    void DrawerToggle()
    {
        isPanelOpen = !isPanelOpen;
    }

    void OnNavLinkClick(BFUNavLink linkBase)
    {
        isPanelOpen = false;
    }
}